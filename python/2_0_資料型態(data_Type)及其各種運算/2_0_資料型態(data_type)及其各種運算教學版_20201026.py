# -*- coding: utf-8 -*-
"""2_0_資料型態(data_Type)及其各種運算教學版_20201026.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14nVi6aM2zthvdXVWqjn9cDGUh2FCuABu

# Python有眾多資料型態(data Type)及其各種運算
```
    >* 數值(Numeric)資料及其運算
    >* 字串(string)及其運算
    >* 列表(list)資料及其運算
    >* 字典(dict)資料及其運算  
    >*[自我練習]tuple資料及其運算  
    >*[自我練習]set資料及其運算  
```
```
 本課程規劃讓同學快速掌握python程式的開發技術
 還有更多技術及細節 請務必閱讀更多教材深入
```

# 資料型態(Data Type)學習重點:
```
各種運算
各種內建函數
型態轉換
運算優先順序
```

[進階範例]底下程式執行後結果為何?
```
from queue import Queue
q = Queue()
q.put(1)
q.put(2)
q.put(3)
q
print(q.queue)

q.get()
 ```
"""

from queue import Queue
q = Queue()
q.put(1)
q.put(2)
q.put(3)
q
print(q.queue)

"""# 快速入門 

# [1]數值(Numeric)資料及其運算
```
Python 支持三種不同的數值型別(Data Type)：

[1]Int 整數，是可以是正或負整數，不帶小數點。
   Python3  int是沒有限制大小的，可以當作 Long 類型使用，所以 Python3 沒有 Python2 的 Long 類型。

[2]浮點數(float) :由整數部分與小數部分組成，浮點型也可以使用科學計數法表示（2.5e2 = 2.5 x 10 0 = 250）

[3]複數( (complex)) - 複數由實數部分和虛數部分構成，可以用a + bj,或者complex(a,b)表示， 複數的實部a和虛部b都是浮點型。

https://www.w3schools.com/python/python_exercises.asp
```

[實作練習]底下程式執行後結果為何?
```
a = 17 / 3
b = 17 // 3
c = 17 % 3

a,b,c
```
"""

a = 17 / 3
b = 17 // 3
c = 17 % 3
 
a,b,c

-3 % 2

abs(3+4j)

"""# [2]字串(string)及其運算

```
字串(string)
變數值以一對雙引號 (「"」)或單引號 (「'」)
存取字串中的值: 使用方括號
```

[實作練習]底下程式執行後結果為何?
```
var1 = 'Hello Python!'
 
print("var1[0]: ", var1[0])
print("var1[1:8]: ", var1[1:8])
```
"""

var1 = 'Hello Python!'
 
print("var1[0]: ", var1[0])
print("var1[1:8]: ", var1[1:8])

"""[實作練習] 填入程式使輸出為 Hello World!
```
var1 = 'Hello Python!'

print(var1[:____]+"World!"+"恩師最偉大")
```
"""

var1 = 'Hello Python!'

print(var1[:6]+"World!"+"恩師最偉大")

"""# [3]列表(list)資料及其運算
```
LIST是 Python 中最基本的資料結構。
LIST使用一個方括號內的逗號分隔值出現。

LIST的每個值都有對應的位置，稱之為索引( index)，
第一個索引是 0，第二個索引是 1，依此類推。

LIST都可以進行的操作包括索引，切片，加，乘，檢查成員。

Python 內建許多函數: 
1.len(list):元素個數
2.max(list)返回元素最大值
3.min(list):返回元素最小值
```

底下程式執行後結果為何?
```
list1 = [21, 33, 14, 12, 32, 98]

list1[1]
```
"""

list1 = [21, 33, 14, 12, 32, 98]
 
list1[1]

"""底下程式執行後結果為何?
```
list1 = [21, 33, 14, 12, 32, 98]

list1[-2]
```
"""

list1 = [21, 33, 14, 12, 32, 98]
 
list1[-2]

"""底下程式執行後結果為何?
```
len(list1)
```
"""

len(list1)

"""底下程式執行後結果為何?
```
max(list1)
```
"""

max(list1)

"""底下程式執行後結果為何?
```
min(list1)
```

底下程式執行後結果為何?
```
sum(list1)
```

# [4]字典(dict)資料及其運算 
```
字典的每筆資料都使用key(鍵)=>value(值) pair(對)
每筆資料都使用冒號 : 分割
每對之間用逗號(,)分割，
整個字典包括在花括弧 {} 

key(鍵)必須是唯一的，但value(值)則不必。

Python 內建許多函數: 
	len(dict):計算字典元素個數，即鍵的總數。


Python 內建許多方法(Method):
字典.items():以列表返回LIST陣列
字典.keys():返回所有keys
字典.values():返回所有values
```

底下程式執行後結果為何?
``` 
dict = {'Name': 'DaDaLong', 'Age': 17, 'Class': 'First'}
 
print("dict['Name']: ", dict['Name'])
print("dict['Age']: ", dict['Age'])
```

底下程式執行後結果為何?
```
dict = {'Name': 'DaDaLong', 'Age': 17, 'Class': 'First'}
dict.items()
```

[程式比較]和上述程式輸出有何不同?
```
dict = {'Name': 'DaDaLong', 'Age': 17, 'Class': 'First'}
list(dict.items())
```

```
dict = {'Name': 'DaDaLong', 'Age': 17, 'Class': 'First'}
list(dict.keys())
```
"""

from queue import Queue
q = Queue()
q.put(1)
q.put(2)
q.put(3)
q
print(q.queue)
 
q.get()

a = 17 / 3
b = 17 // 3
c = 17 % 3
 
a,b,c

-3 % 2

abs(3+4j)

var1 = 'Hello Python!'

print(var1[:6]+"World!")

list1 = [21, 33, 14, 12, 32, 98]
 
list1[1]

list1 = [21, 33, 14, 12, 32, 98]
 
list1[-2]

len(list1)

max(list1)

dict = {'Name': 'DaDaLong', 'Age': 17, 'Class': 'First'}
 
print("dict['Name']: ", dict['Name'])
print("dict['Age']: ", dict['Age'])

dict = {'Name': 'DaDaLong', 'Age': 17, 'Class': 'First'}
dict.items()

dict = {'Name': 'DaDaLong', 'Age': 17, 'Class': 'First'}
list(dict.items())

dict = {'Name': 'DaDaLong', 'Age': 17, 'Class': 'First'}
list(dict.keys())